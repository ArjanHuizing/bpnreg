install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages(c("haven", "Rcpp", "RcppArmadillo", "BH", "MASS", "lme4"))
devtools::install_github("hadley/devtools")
devtools::install_github("hadley/devtools")
library(devtools)
has_devel()
library(bpnreg)
library(bpnreg)
file.exists("~/.ssh/id_rsa.pub")
library(bpnreg)
library(bpnreg)
library(bpnreg)
devtools::document()
library(bpnreg)
devtools::document()
devtools::document()
library(bpnreg)
git config --global --edit
file.exists("~/.ssh/id_rsa.pub")
devtools::document()
library(bpnreg)
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
library(bpnreg)
devtools::document()
library(bpnreg)
devtools::document()
library(bpnreg)
devtools::document()
library(bpnreg)
library(bpnreg)
par()$mar
mar <- par()$mar
mar[1] <- 8
mar[1]
mar
par(mar = mar)
par()$mar
devtools::document()
library(bpnreg)
?devtools::use_data
devtools::document()
Motor <- haven::read_spss(file = "data-raw/Motor Cognition/PhaseDifference.sav")
Motor <- Motor[,1:3]
Motor <- cbind(Motor, Motor$PhaseDiff*(pi/180))
colnames(Motor) <- c(colnames(Motor[,-4]), "Phaserad")
Motor$Condition <- factor(Motor$Condition, labels = c("imp", "semi.imp", "exp"))
Motor$AvAmp <- Motor$AvAmp - mean(Motor$AvAmp)
devtools::use_data(Motor, overwrite = TRUE)
library(bpnreg)
devtools::document()
library(bpnreg)
Motor <- haven::read_spss(file = "data-raw/Motor Cognition/PhaseDifference.sav")
Motor <- Motor[,1:3]
Motor <- cbind(Motor, Motor$PhaseDiff*(pi/180))
colnames(Motor) <- c(colnames(Motor[,-4]), "Phaserad")
Motor$Cond <- factor(Motor$Cond, labels = c("imp", "semi.imp", "exp"))
Motor$AvAmp <- Motor$AvAmp - mean(Motor$AvAmp)
devtools::use_data(Motor, overwrite = TRUE)
colnames(Motor)
Motor <- haven::read_spss(file = "data-raw/Motor Cognition/PhaseDifference.sav")
Motor <- Motor[,1:3]
Motor <- cbind(Motor, Motor$PhaseDiff*(pi/180))
colnames(Motor) <- c(colnames(Motor[,-4]), "Phaserad")
Motor$Cond <- factor(Motor$Condition, labels = c("imp", "semi.imp", "exp"))
Motor$AvAmp <- Motor$AvAmp - mean(Motor$AvAmp)
devtools::use_data(Motor)
Motor <- haven::read_spss(file = "data-raw/Motor Cognition/PhaseDifference.sav")
Motor <- Motor[,1:3]
Motor <- cbind(Motor, Motor$PhaseDiff*(pi/180))
colnames(Motor) <- c(colnames(Motor[,-4]), "Phaserad")
Motor$Cond <- factor(Motor$Condition, labels = c("imp", "semi.imp", "exp"))
Motor$AvAmp <- Motor$AvAmp - mean(Motor$AvAmp)
devtools::use_data(Motor, overwrite = TRUE)
Motor
Motor <- haven::read_spss(file = "data-raw/Motor Cognition/PhaseDifference.sav")
Motor
Motor <- haven::read_spss(file = "data-raw/Motor Cognition/PhaseDifference.sav")
Motor <- Motor[,1:3]
Motor <- cbind(Motor, Motor$PhaseDiff*(pi/180))
colnames(Motor) <- c("Cond", colnames(Motor[,-c(1,4)]), "Phaserad")
Motor$Cond <- factor(Motor$Condition, labels = c("imp", "semi.imp", "exp"))
Motor$AvAmp <- Motor$AvAmp - mean(Motor$AvAmp)
Motor$Cond <- factor(Motor$Cond, labels = c("imp", "semi.imp", "exp"))
Motor
Motor <- haven::read_spss(file = "data-raw/Motor Cognition/PhaseDifference.sav")
Motor <- Motor[,1:3]
Motor <- cbind(Motor, Motor$PhaseDiff*(pi/180))
colnames(Motor) <- c("Cond", colnames(Motor[,-c(1,4)]), "Phaserad")
Motor$Cond <- factor(Motor$Cond, labels = c("imp", "semi.imp", "exp"))
Motor$AvAmp <- Motor$AvAmp - mean(Motor$AvAmp)
devtools::use_data(Motor, overwrite = TRUE)
devtools::document()
library(bpnreg)
fit.Maps3 <- bpnme(pred.I = Error.rad ~ Maze*Trial.type + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
fit.Maps3$varrand.num
fit.Maps3$varrand.cat
fit.Maps3$circular.ri
fit$Maps3$circ.res.varrand
fit.Maps3$circ.res.varrand
devtools::document()
library(bpnreg)
fit.Maps3 <- bpnme(pred.I = Error.rad ~ Maze*Trial.type + (1 + Trial.type|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
fit.Maps3$varrand.cat
devtools::document()
library(bpnreg)
fit.Maps3 <- bpnme(pred.I = Error.rad ~ Maze*Trial.type + (1 + Trial.type|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
fit.Maps3$cRI
fit.Maps$cRScat
fit.Maps3$cRScat
devtools::document()
library(bpnreg)
?BFc
?BFc.bpnr
?fit
?predict
?predict.bpnr
?predict.bpnme
?coef_ran
?coef_lin
?coef_circ
devtools::document()
devtools::document()
library(bpnreg)
?coef_circ
?Motor
devtools::document()
devtools::document()
devtools::document()
library(bpnreg)
?mode_est_circ
devtools::check()
devtools::document()
devtools::check()
library(bpnreg)
devtools::check()
devtools::document()
library(bpnreg)
devtools::check()
devtools::use_data_raw()
devtools::check()
devtools::document()
library(bpnreg)
devtools::check()
devtools::document()
library(bpnreg)
devtools::document()
library(bpnreg)
devtools::check()
tools::package_native_routine_registration_skeleton(".")
tools::package_native_routine_registration_skeleton(".")
package_native_routine_registration_skeleton()
package_native_routine_registration_skeleton("bpnreg")
tools::package_native_routine_registration_skeleton()
tools::package_native_routine_registration_skeleton("bpnreg")
lme4:::RHSForm
?reformulate
?deparse
lme4:::reOnly
?safeDeparse
??safeDeparse
lme4:::safeDeparse()
lme4:::safeDeparse
lme4:::findbars
devtools::document()
library(bpnreg)
devtools::document()
library(bpnreg)
library(bpnreg)
devtools::document()
devtools::document()
library(bpnreg)
library(bpnreg)
fit.Maps2 <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + (1|Subject),
data = Maps,
its = 1000, burn = 100, n.lag = 3)
traceplot(fit.Maps2, parameter = "VCovI")
devtools::document()
library(bpnreg)
its = 1000, burn = 100, n.lag = 3)
fit.Maps2 <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + (1|Subject),
data = Maps,
its = 1000, burn = 100, n.lag = 3)
traceplot(fit.Maps2, parameter = "VCovI")
devtools::document()
library(bpnreg)
fit.Maps2 <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + (1|Subject),
data = Maps,
its = 1000, burn = 100, n.lag = 3)
traceplot(fit.Maps2, parameter = "VCovI")
devtools::document()
library(bpnreg)
fit.Maps2 <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
traceplot(fit.Maps2, parameter = "VCovI")
devtools::document()
library(bpnreg)
devtools::document()
library(bpnreg)
fit.Maps2 <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
traceplot(fit.Maps2, parameter = "VCovI")
traceplot(fit.Maps2, parameter = "VCovII")
traceplot(fit.Maps2, parameter = "VCovII", variable = "(Intercept)")
devtools::document()
library(bpnreg)
fit.Maps2 <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
traceplot(fit.Maps2, parameter = "VCovI")
traceplot(fit.Maps2, parameter = "VCovII", variable = "(Intercept)")
fit.Maps2 <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + (1 + Trial.type|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
traceplot(fit.Maps2, parameter = "VCovII", variable = "(Intercept)")
traceplot(fit.Maps2, parameter = "VCovI")
traceplot(fit.Maps2, parameter = "VCovII")
traceplot(fit.Maps2, parameter = "VCovI", variable = "(Intercept)")
traceplot(fit.Maps2, parameter = "cRI", variable = "(Intercept)")
traceplot(fit.Maps2, parameter = "cRI")
traceplot(fit.Maps2, parameter = "Beta.I")
traceplot(fit.Maps2, parameter = "CRSnum")
traceplot(fit.Maps2, parameter = "cRSnum")
fit.Maps2$cRSnum
traceplot(fit.Maps2, parameter = "CRScat")
traceplot(fit.Maps2, parameter = "cRScat")
devtools::document()
devtools::document()
devtools::document()
library(bpnreg)
fit.Maps2 <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + (1 + Trial.type|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
traceplot(fit.Maps2, parameter = "cRI")
traceplot(fit.Maps2, parameter = "cRI")
traceplot(fit.Maps2, parameter = "cRScat")
traceplot(fit.Maps2, parameter = "cRI")
