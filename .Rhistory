its = 100, burn = 10, n.lag = 3)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 10000, burn = 100, n.lag = 5)
devtools::document()
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 10000, burn = 100, n.lag = 5)
devtools::document()
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 10000, burn = 100, n.lag = 5)
devtools::document()
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 10000, burn = 100, n.lag = 5)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
fit.Maps$circ.coef.means.comb
fit.Maps$circ.coef.means
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps)
coef_circ(fit.Maps, type = categorical)
coef_circ(fit.Maps, type = "categorical")
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical")
coef_circ(fit.Maps, type = "categorical", units = "degrees")
matrix <- combn(c("hihi", "bla", "ga"), 2)
sapply(1:ncol(matrix), function(w){paste(matrix[,w])})
paste(matrix[,1])
paste(matrix[,1], sep = "")
matrix(,1)
matrix[,1]
paste(matrix[,1], sep = "", collapse = "")
apply(matrix, 2, paste(matrix, sep = "", collapse = ""))
sapply(1:ncol(matrix), function(w){paste(matrix[,w], sep = "", collapse = "")})
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical")
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
coef_lin
coef_lin(fit.Maps)
coef_circ(fit.Maps, type = "categorical")
dummy <- atan2(fit.Maps$Beta.II[, "(Intercept)"] + fit.Maps$Beta.II[, "Maze1"] + fit.Maps$Beta.II[, "Trial.type1"],
fit.Maps$Beta.I[, "(Intercept)"] + fit.Maps$Beta.I[, "Maze1"] + fit.Maps$Beta.I[, "Trial.type1"])
theta_bar(dummy)
mean_circ(dummy)
mean_circ(dummy, units = "degrees")
devtools::document()
mean_circ(dummy, units = "degrees")
devtools::document()
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 1000, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 1000, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
ncol(0)
1 + NULL
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze ,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze ,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze ,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c
data = Maps,
its = 1000, burn = 10, n.lag = 3)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c,
data = Maps, pred.II = Error.rad ~ Maze + Trial.type,
its = 1000, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
devtools::document()
devtools::document()
devtools::build()
devtools::document()
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
devtools::document()
devtools::document()
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 10000, burn = 100, n.lag = 5)
coef_circ(fit.Motor, type = "categorical")
sessionInfo()
packageVersion("RcppArmadillo")
packageVersion("Rcpp")
packageVersion("BH")
packageVersion("MASS")
packageVersion("haven")
packageVersion("methods")
devtools::document()
library(bpnreg)
devtools::check()
devtools::document()
library(bpnreg)
devtools::check()
library(bpnreg)
library(bpnreg)
?bpnreg
bpnr(Phaserad ~ Cond + AvAmp, Motor)
?CircGLMBayes
library(circglmbayes)
?circglmbayes
library(bpnreg)
library(bpnreg)
?`bpnreg-package`
devtools::document()
?`bpnreg-package`
devtools::document()
?`bpnreg-package`
?bpnreg
library(bpnreg)
library(circglmbayes)
?circglmbayes
?circglmbayes-package
?`circglmbayes-package`
?circglmbayes
?bpnreg
devtools::document()
?bpnreg
library(bpnreg)
?bpnreg
devtools::document()
library(bpnreg)
?bpnreg
devtools::document()
devtools::document()
library(bpnreg)
?bpnreg
?bpnreg
devtools::load_all(".")
library(bpnreg)
?bpnreg
library(bpnreg)
devtools::document()
library(bpnreg)
?bpnreg
?circGLM
?plot.circGLM
?BFc
?BFc
?circglmbayes
?BF.circglm
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 100, burn = 10, n.lag = 3)
BFc(fit.Motor, hypothesis = "Condsemi.imp < Condimp")
?fit
fit()
?coef_circ
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Motor)
coef_circ(fit.Motor, type = "categorical")
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Motor)
coef_circ(fit.Motor, type = "categorical")
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 1, n.lag = 1)
coef_circ(fit.Maps)
?BFc
fits.Maps
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 1, n.lag = 1)
fit.Maps
BFc.bpnme(fit.Maps, hypothesis = "Maze1 < Trial.type1")
BFc(fit.Maps, hypothesis = "Maze1 < Trial.type1")
BFc(fit.Maps, hypothesis = "Maze1 < Maze1Trial.type1)
)
BFc(fit.Maps, hypothesis = "Maze1 < Maze1Trial.type1")
BFc(fit.Maps, hypothesis = "Trial.type1 < Maze1Trial.type1")
BFc(fit.Maps, hypothesis = "Maze1 < Trial.type1")
BFc(fit.Maps, hypothesis = "Maze1 < Trial.type1")
devtools::document()
1+1
?bpnreg
library(bpnreg)
?BFc.bpnme
library(bpnreg)
?BFc.bpnme
?bpnreg
library(bpnreg)
devtools::document()
?bpnreg
?Maps
devtools::document()
devtools::document()
library(bpnreg)
?betaBlock.fRI
devtools::document()
devtools::document()
?circGLM
?bpnr
library(bpnreg)
bpnr(Phaserad ~ Cond + AvAmp, Motor)
?bpnme
?bpnreg
?bpnme
library(bpnreg)
bpnme(Error.rad ~ Maze + Trial.type + (1|Subject), Maps, its = 100)
?coef_lin
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 100, burn = 10, n.lag = 3)
coef_lin(fit.Motor)
?coef_circ
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Motor)
coef_circ(fit.Motor, type = "categorical")
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Motor)
coef_circ(fit.Motor)
?coef_lin
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 100, burn = 10, n.lag = 3)
coef_lin(fit.Motor)
?traceplot
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 100, burn = 10, n.lag = 3)
traceplot(fit.Motor, parameter = "B1")
?BFc
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 100, burn = 10, n.lag = 3)
BFc(fit.Motor, hypothesis = "Condsemi.imp < Condimp")
?circGLM
?BFc
?BFc.bpnme
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps, its = 100, burn = 1, n.lag = 1)
BFc(fit.Maps, hypothesis = "Maze1 < Trial.type1")
fit.Maps
BFc(fit.Maps, hypothesis = "Maze1 < Trial.type1 < Maze1Trial.type1")
BFc(fit.Maps, hypothesis = "Maze1 < Trial.type1 = Maze1Trial.type1")
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps, its = 100, burn = 1, n.lag = 1)
BFc(fit.Maps, hypothesis = "Maze1 < Trial.type1")
?BFc.bpnme
devtools::document()
?bpnreg
?coef
?coef_ran
?traceplot.bpnr
?fit.bpnr
?coef_circ
?coef_circ.bpnr
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Motor)
coef_circ(fit.Motor, type = "categorical")
?coef_circ.bpnme
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 1, n.lag = 1)
coef_circ(fit.Maps)
library(bpnreg)
fit.Maps <- bpnrpred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 1, n.lag = 1)
coef_circ(fit.Maps)
library(bpnreg)
fit.Maps <- bpnrpred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 1, n.lag = 1)
coef_circ(fit.Maps)
?bpnreg
library(bpnreg)
?bpnreg
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 100, burn = 10, n.lag = 3)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
)
fit.Motor
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,its = 100, burn = 1, n.lag = 1)
coef_circ(fit.Maps)
coef_lin(fit.Maps)
coef_ran(fit.Maps)
coef_circ(fit.Motor)
coef_lin(fit.Motor)
coef_ran(fit.Motor)
coef_circ(fit.Motor)
?coef_ran
?coef_circ
coef_circ(fit.Maps,type="categorical")
coef_circ(fit.Motor,type="categorical")
coef_circ(fit.Motor)
?coef_circ.bpnr
coef_circ(fit.Motor)
Motor
coef_circ(fit.Motor,type="continues")
coef_circ(fit.Motor,type="continuous")
?coef_lin
coef_ran(fit.Maps) #RI?
coef_lin(fit.Maps) #mean mode sd LB UB
fit.Maps
coef_lin(fit.Motor) #mean mode sd LB UB
coef_ran(fit.Maps) #RI?
coef_lin(fit.Maps) #mean mode sd LB UB
?coef_circ
coef_circ(fit.Maps) #L.c. ax ac bc AS SAM SSDO
?coef_ran
coef_ran(fit.Maps) #RI?
coef_lin(fit.Motor) #mean mode sd LB UB
?coef_lin.bpnr
?bpnr
devtools::document
devtools::document()
library(bpnreg)
?traceplot
devtools::document()
library(bpnreg)
?traceplot
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 100, burn = 10, n.lag = 3)
traceplot(fit.Motor, parameter = "B1")
?fit
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 100, burn = 10, n.lag = 3)
fit(fit.Motor)
?fit
devtools::document()
library(bpnreg)
?BFc.bpnme
devtools::document()
library(bpnreg)
?BFc.bpnme
?fit.bpnr
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 100, burn = 10, n.lag = 3)
fit(fit.Motor)
devtools::document()
library(bpnreg)
?fit.bpnr
?fit.bpnmr
?fit.bpnme
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 1, n.lag = 1)
fit(fit.Maps)
?print.bpnr
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 100, burn = 10, n.lag = 3)
print(fit.Motor)
devtools::document()
##BPNME
coef_circ(fit.Maps) #L.c. ax ac bc AS SAM SSDO
?bpnreg
?bpnreg
devtools::document()
?bpnr
?bpnreg
devtools::document()
